.ProseMirror-selectednode:has(iframe),
img.ProseMirror-selectednode {
  box-shadow:
    0 0 0 3px var(--rte-bg, #ffffff),
    0 0 0 5px var(--rte-primary);
}

.ProseMirror {
  flex: 1;
  outline: none;
  width: 100%;
  white-space: pre-wrap;
  position: relative;
  padding-block: 1.75rem;
}
.ProseMirror[contenteditable='true'] .ProseMirror-selectednode:has(iframe),
.ProseMirror[contenteditable='true'] img.ProseMirror-selectednode,
.ProseMirror[contenteditable='true']
  img:has(+ figcaption.ProseMirror-selectednode) {
  box-shadow:
    0 0 0 3px var(--rte-bg, #ffffff),
    0 0 0 5px var(--rte-primary);
}
.ProseMirror.resize-cursor {
  cursor: col-resize;
}
.ProseMirror > * {
  margin-top: 1.25rem;
}
.ProseMirror > *:first-child {
  margin-top: 0;
}
.ProseMirror [data-indent='1'] {
  text-indent: 1em;
}
.ProseMirror [data-indent='2'] {
  text-indent: 2em;
}
.ProseMirror [data-indent='3'] {
  text-indent: 3em;
}
.ProseMirror [data-indent='4'] {
  text-indent: 4em;
}
:where(
    .ProseMirror > p.is-editor-empty:first-child,
    figcaption.is-empty
  )::before {
  content: attr(data-placeholder);
  float: left;
  color: var(--rte-muted-fg);
  pointer-events: none;
  width: 100%;
  height: 0;
}
.ProseMirror ::selection,
.ProseMirror .selection {
  background-color: var(
    --rte-editor-selection,
    tint-color(var(--rte-primary), 0.2)
  );
}
.ProseMirror .selectedCell:after {
  z-index: 2;
  position: absolute;
  content: '';
  inset: 0;
  background-color: var(
    --rte-editor-selection,
    tint-color(var(--rte-primary), 0.2)
  );
  pointer-events: none;
}
.ProseMirror h1,
.ProseMirror h2,
.ProseMirror h3,
.ProseMirror h4 {
  font-weight: bold;
  margin-top: 1.25rem;
}
.ProseMirror h1 {
  font-size: 1.75em;
  margin-top: 1.75rem;
}
.ProseMirror h2 {
  font-size: 1.625em;
  margin-top: 1.75rem;
}
.ProseMirror h3 {
  font-size: 1.25em;
  margin-top: 1.5rem;
}
.ProseMirror h4 {
  font-size: 1em;
}
.ProseMirror p {
  font-size: 1em;
  line-height: 1.75;
}
.ProseMirror a {
  color: var(--rte-editor-link, var(--rte-primary));
  font-weight: 600;
}
.ProseMirror a:hover {
  text-decoration: underline;
}
.ProseMirror a:not([href]) {
  color: inherit;
  text-decoration: none;
  font-weight: normal;
}
.ProseMirror ul,
.ProseMirror ol {
  padding-inline: 2rem;
}
.ProseMirror ul li,
.ProseMirror ol li {
  margin-block: 0.375rem;
  padding-inline-start: 0.375rem;
}
.ProseMirror ul {
  list-style-type: disc;
}
.ProseMirror ol {
  list-style-type: decimal;
}
.ProseMirror blockquote {
  padding: 0.375rem 1.25rem;
  font-style: italic;
  border-left: 0.25rem solid var(--rte-border);
}
.ProseMirror img,
.ProseMirror iframe,
.ProseMirror video {
  display: block;
  max-width: 100%;
  height: auto;
  margin-inline: auto;
  cursor: default;
}
.ProseMirror iframe {
  width: 100%;
  margin: 0 auto;
  pointer-events: none;
  aspect-ratio: 16/9;
  position: relative;
}
.ProseMirror figure {
  cursor: default;
  user-select: none;
}
.ProseMirror figcaption {
  font-size: 90%;
  color: var(--rte-muted-fg);
  text-align: center;
  line-height: 1.4;
  cursor: text;
  padding: 0.5rem 1.5rem 0.25rem;
  margin-bottom: -0.25rem;
}
.ProseMirror code,
.ProseMirror kbd,
.ProseMirror samp,
.ProseMirror pre {
  font-family: var(
    --rte-editor-code-font,
    ui-monospace,
    SFMono-Regular,
    SF Mono,
    Menlo,
    Consolas,
    Liberation Mono,
    monospace
  );
  font-feature-settings: normal;
  font-variation-settings: normal;
}
.ProseMirror code {
  background: var(--rte-editor-code-bg, #f6f8fa);
  border: 1px solid var(--rte-border);
  border-radius: calc(var(--rte-radius, 0.5rem) * 0.75);
  padding: 0.15rem 0.3rem;
  font-size: 90%;
}
.ProseMirror pre {
  white-space: pre !important;
  tab-size: 2;
  line-height: 1.55;
  padding: 0.75rem 1.25rem;
  background: var(--rte-editor-code-bg, #f6f8fa);
  border: 1px solid var(--rte-border);
  color: var(--rte-fg, #1f2328);
  overflow: auto;
  scrollbar-width: thin;
  scrollbar-color: var(--rte-editor-scrollbar, rgba(0, 0, 0, 0.2509803922))
    transparent;
}
.ProseMirror pre code {
  background: transparent;
  padding: 0;
  border: none;
}
.ProseMirror .tableWrapper {
  overflow: auto;
  scrollbar-width: thin;
  scrollbar-color: var(--rte-editor-scrollbar, rgba(0, 0, 0, 0.2509803922))
    transparent;
}
.ProseMirror table {
  border: 1px solid var(--rte-border);
  font-size: 90%;
  overflow: hidden;
  border-collapse: collapse;
  table-layout: fixed;
  margin-inline: auto;
}
.ProseMirror table th,
.ProseMirror table td {
  border: 1px solid var(--rte-border);
  padding: 0.5rem 0.75rem;
  position: relative;
  vertical-align: top;
  text-align: left;
}
.ProseMirror table th {
  background-color: var(--rte-muted);
}
.ProseMirror table .column-resize-handle {
  background-color: var(--rte-primary);
  bottom: -2px;
  pointer-events: none;
  position: absolute;
  right: -1px;
  top: 0;
  width: 3.5px;
  z-index: 10;
}

/*!
  Theme: GitHub
  Description: Light theme as seen on github.com
  Author: github.com
  Maintainer: @Hirse
  Updated: 2021-05-15

  Outdated base version: https://github.com/primer/github-syntax-light
  Current colors taken from GitHub's CSS
*/
.hljs-keyword,
.hljs-meta .hljs-keyword,
.hljs-template-tag,
.hljs-template-variable,
.hljs-type {
  color: var(--rte-hljs-keyword);
}
.hljs-title,
.hljs-title.class_,
.hljs-title.class_.inherited__,
.hljs-title.function_ {
  color: var(--rte-hljs-function);
}
.hljs-attr,
.hljs-attribute,
.hljs-literal,
.hljs-meta,
.hljs-number,
.hljs-operator,
.hljs-variable,
.hljs-selector-attr,
.hljs-selector-id,
.hljs-variable.language_ {
  color: var(--rte-hljs-variable);
}
.hljs-meta .hljs-string,
.hljs-regexp,
.hljs-string {
  color: var(--rte-hljs-string);
}
.hljs-built_in,
.hljs-symbol,
.hljs-params {
  color: var(--rte-hljs-builtin);
}
.hljs-code,
.hljs-comment,
.hljs-formula {
  color: var(--rte-hljs-comment);
}
.hljs-name,
.hljs-quote,
.hljs-selector-tag,
.hljs-selector-pseudo {
  color: var(--rte-hljs-markup);
}
.hljs-addition {
  color: var(--rte-hljs-inserted);
  background-color: #1b4721;
}
.hljs-deletion {
  color: var(--rte-hljs-deleted);
  background-color: #78191b;
}
.hljs-changed {
  color: var(--rte-hljs-changed);
}
.hljs-section {
  color: var(--rte-hljs-constant);
  font-weight: bold;
}
.hljs-emphasis {
  color: var(--rte-hljs-fg);
  font-style: italic;
}
.hljs-strong {
  color: var(--rte-hljs-fg);
  font-weight: bold;
}
